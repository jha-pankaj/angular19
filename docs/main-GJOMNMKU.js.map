{"version":3,"sources":["src/app/guards/auth.guard.ts","src/app/app.routes.ts","node_modules/@angular/platform-browser/fesm2022/animations/async.mjs","src/app/app.config.ts","src/app/app.component.ts","src/app/app.component.html","src/main.ts"],"sourcesContent":["import { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { inject } from '@angular/core';\r\n\r\nexport const authGuard: CanActivateFn =   (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n  if (typeof window !== 'undefined') {\r\n  const json = localStorage.getItem('dashboard_user');\r\n  console.log(\"json\",json)\r\n  }\r\n  console.log(\"authService.isLoggedIn()\",authService.isLoggedIn())\r\n  if (authService.isLoggedIn()) {\r\n    return true;\r\n  }\r\n  else {\r\n     router.navigateByUrl('/login');\r\n    \r\n    return false;\r\n   \r\n  \r\n}\r\n};","import { Routes } from \"@angular/router\";\r\nimport { authGuard } from \"./guards/auth.guard\";\r\nexport const routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    loadChildren: () =>\r\n      import(\"./dashboard/dashboard.route\").then((m) => m.dashboardRoutes),\r\n    canActivate: [authGuard],\r\n  },\r\n  {\r\n    path: \"dashboard\",\r\n    redirectTo: \"\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadComponent: () =>\r\n      import('./login/login.component').then((m) => m.LoginComponent),\r\n     \r\n  },\r\n \r\n  { path: \"**\", redirectTo: \"\" },\r\n];\r\n","/**\n * @license Angular v19.0.0\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ɵChangeDetectionScheduler, ɵRuntimeError, Injectable, InjectionToken, ɵperformanceMarkFeature, makeEnvironmentProviders, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { ɵDomRendererFactory2 } from '@angular/platform-browser';\nconst ANIMATION_PREFIX = '@';\nlet AsyncAnimationRendererFactory = /*#__PURE__*/(() => {\n  class AsyncAnimationRendererFactory {\n    doc;\n    delegate;\n    zone;\n    animationType;\n    moduleImpl;\n    _rendererFactoryPromise = null;\n    scheduler = inject(ɵChangeDetectionScheduler, {\n      optional: true\n    });\n    loadingSchedulerFn = inject(ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, {\n      optional: true\n    });\n    _engine;\n    /**\n     *\n     * @param moduleImpl allows to provide a mock implmentation (or will load the animation module)\n     */\n    constructor(doc, delegate, zone, animationType, moduleImpl) {\n      this.doc = doc;\n      this.delegate = delegate;\n      this.zone = zone;\n      this.animationType = animationType;\n      this.moduleImpl = moduleImpl;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      // When the root view is removed, the renderer defers the actual work to the\n      // `TransitionAnimationEngine` to do this, and the `TransitionAnimationEngine` doesn't actually\n      // remove the DOM node, but just calls `markElementAsRemoved()`. The actual DOM node is not\n      // removed until `TransitionAnimationEngine` \"flushes\".\n      // Note: we already flush on destroy within the `InjectableAnimationEngine`. The injectable\n      // engine is not provided when async animations are used.\n      this._engine?.flush();\n    }\n    /**\n     * @internal\n     */\n    loadImpl() {\n      // Note on the `.then(m => m)` part below: Closure compiler optimizations in g3 require\n      // `.then` to be present for a dynamic import (or an import should be `await`ed) to detect\n      // the set of imported symbols.\n      const loadFn = () => this.moduleImpl ?? import('@angular/animations/browser').then(m => m);\n      let moduleImplPromise;\n      if (this.loadingSchedulerFn) {\n        moduleImplPromise = this.loadingSchedulerFn(loadFn);\n      } else {\n        moduleImplPromise = loadFn();\n      }\n      return moduleImplPromise.catch(e => {\n        throw new ɵRuntimeError(5300 /* RuntimeErrorCode.ANIMATION_RENDERER_ASYNC_LOADING_FAILURE */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Async loading for animations package was ' + 'enabled, but loading failed. Angular falls back to using regular rendering. ' + \"No animations will be displayed and their styles won't be applied.\");\n      }).then(({\n        ɵcreateEngine,\n        ɵAnimationRendererFactory\n      }) => {\n        // We can't create the renderer yet because we might need the hostElement and the type\n        // Both are provided in createRenderer().\n        this._engine = ɵcreateEngine(this.animationType, this.doc);\n        const rendererFactory = new ɵAnimationRendererFactory(this.delegate, this._engine, this.zone);\n        this.delegate = rendererFactory;\n        return rendererFactory;\n      });\n    }\n    /**\n     * This method is delegating the renderer creation to the factories.\n     * It uses default factory while the animation factory isn't loaded\n     * and will rely on the animation factory once it is loaded.\n     *\n     * Calling this method will trigger as side effect the loading of the animation module\n     * if the renderered component uses animations.\n     */\n    createRenderer(hostElement, rendererType) {\n      const renderer = this.delegate.createRenderer(hostElement, rendererType);\n      if (renderer.ɵtype === 0 /* AnimationRendererType.Regular */) {\n        // The factory is already loaded, this is an animation renderer\n        return renderer;\n      }\n      // We need to prevent the DomRenderer to throw an error because of synthetic properties\n      if (typeof renderer.throwOnSyntheticProps === 'boolean') {\n        renderer.throwOnSyntheticProps = false;\n      }\n      // Using a dynamic renderer to switch the renderer implementation once the module is loaded.\n      const dynamicRenderer = new DynamicDelegationRenderer(renderer);\n      // Kick off the module loading if the component uses animations but the module hasn't been\n      // loaded yet.\n      if (rendererType?.data?.['animation'] && !this._rendererFactoryPromise) {\n        this._rendererFactoryPromise = this.loadImpl();\n      }\n      this._rendererFactoryPromise?.then(animationRendererFactory => {\n        const animationRenderer = animationRendererFactory.createRenderer(hostElement, rendererType);\n        dynamicRenderer.use(animationRenderer);\n        this.scheduler?.notify(11 /* NotificationSource.AsyncAnimationsLoaded */);\n      }).catch(e => {\n        // Permanently use regular renderer when loading fails.\n        dynamicRenderer.use(renderer);\n      });\n      return dynamicRenderer;\n    }\n    begin() {\n      this.delegate.begin?.();\n    }\n    end() {\n      this.delegate.end?.();\n    }\n    whenRenderingDone() {\n      return this.delegate.whenRenderingDone?.() ?? Promise.resolve();\n    }\n    static ɵfac = function AsyncAnimationRendererFactory_Factory(__ngFactoryType__) {\n      i0.ɵɵinvalidFactory();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AsyncAnimationRendererFactory,\n      factory: AsyncAnimationRendererFactory.ɵfac\n    });\n  }\n  return AsyncAnimationRendererFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The class allows to dynamicly switch between different renderer implementations\n * by changing the delegate renderer.\n */\nclass DynamicDelegationRenderer {\n  delegate;\n  // List of callbacks that need to be replayed on the animation renderer once its loaded\n  replay = [];\n  ɵtype = 1 /* AnimationRendererType.Delegated */;\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  use(impl) {\n    this.delegate = impl;\n    if (this.replay !== null) {\n      // Replay queued actions using the animation renderer to apply\n      // all events and properties collected while loading was in progress.\n      for (const fn of this.replay) {\n        fn(impl);\n      }\n      // Set to `null` to indicate that the queue was processed\n      // and we no longer need to collect events and properties.\n      this.replay = null;\n    }\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroy() {\n    this.replay = null;\n    this.delegate.destroy();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  get destroyNode() {\n    return this.delegate.destroyNode;\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n  }\n  insertBefore(parent, newChild, refChild, isMove) {\n    this.delegate.insertBefore(parent, newChild, refChild, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.delegate.removeChild(parent, oldChild, isHostElement);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    // We need to keep track of animation properties set on default renderer\n    // So we can also set them also on the animation renderer\n    if (this.shouldReplay(name)) {\n      this.replay.push(renderer => renderer.setProperty(el, name, value));\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback) {\n    // We need to keep track of animation events registred by the default renderer\n    // So we can also register them against the animation renderer\n    if (this.shouldReplay(eventName)) {\n      this.replay.push(renderer => renderer.listen(target, eventName, callback));\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n  shouldReplay(propOrEventName) {\n    //`null` indicates that we no longer need to collect events and properties\n    return this.replay !== null && propOrEventName.startsWith(ANIMATION_PREFIX);\n  }\n}\n/**\n * Provides a custom scheduler function for the async loading of the animation package.\n *\n * Private token for investigation purposes\n */\nconst ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN = /*#__PURE__*/new InjectionToken(ngDevMode ? 'async_animation_loading_scheduler_fn' : '');\n\n/**\n * Returns the set of dependency-injection providers\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * When you use this function instead of the eager `provideAnimations()`, animations won't be\n * rendered until the renderer is loaded.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimationsAsync()\n *   ]\n * });\n * ```\n *\n * @param type pass `'noop'` as argument to disable animations.\n *\n * @publicApi\n */\nfunction provideAnimationsAsync(type = 'animations') {\n  ɵperformanceMarkFeature('NgAsyncAnimations');\n  return makeEnvironmentProviders([{\n    provide: RendererFactory2,\n    useFactory: (doc, renderer, zone) => {\n      return new AsyncAnimationRendererFactory(doc, renderer, zone, type);\n    },\n    deps: [DOCUMENT, ɵDomRendererFactory2, NgZone]\n  }, {\n    provide: ANIMATION_MODULE_TYPE,\n    useValue: type === 'noop' ? 'NoopAnimations' : 'BrowserAnimations'\n  }]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { provideAnimationsAsync, ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, AsyncAnimationRendererFactory as ɵAsyncAnimationRendererFactory };\n","import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';\r\nimport { provideRouter ,withDebugTracing } from '@angular/router';\r\n\r\nimport { routes ,  } from './app.routes';\r\nimport { provideClientHydration, withEventReplay } from '@angular/platform-browser';\r\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideAnimationsAsync()]\r\n};\r\n","import { APP_INITIALIZER, Component, Inject, inject, OnInit, signal } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [CommonModule,RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss',\r\n  providers:[]\r\n})\r\nexport class AppComponent implements OnInit  {\r\n  initApp =false;\r\n   constructor(){\r\n\r\n\r\n\r\n   }\r\n   \r\n  ngOnInit(){\r\n    setTimeout(()=>{\r\n      this.initApp=true;\r\n    },1000)\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\nexport function loadAuthData(): () => Promise<void> {\r\n  const authService = inject(AuthService);\r\n  return () =>\r\n    new Promise((resolve) => {\r\n      authService.isLoggedIn();\r\n      const token = localStorage.getItem('authToken');\r\n      // Simulate delay\r\n      setTimeout(() => {\r\n        console.log('Auth data loaded:', token);\r\n        resolve();\r\n      }, 5000);\r\n    });\r\n}\r\n","<!--<div class=\"main-container scrollable\">\r\n  <div class=\"layout\">\r\n    <app-header (onHeaderItemClicked)=\"onHeaderItemClicked($event)\" ></app-header>\r\n\r\n    <div class=\"main-body\">\r\n      @if(menuOpen()){\r\n      <div class=\"menu-sidebar\" [ngClass]=\"{ 'sidebar-fixed': isPhone$ | async }\">\r\n        <div class=\"sidebar-main\">\r\n          <div class=\"menu-scroll scrollable\">\r\n            <app-sidebar></app-sidebar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    }\r\n      <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n@if(initApp){\r\n\r\n}\r\n<router-outlet></router-outlet>\r\n\r\n\r\n","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));\r\n"],"mappings":"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","names":["authGuard","route","state","authService","inject","AuthService","router","Router","window","json","localStorage","getItem","console","log","isLoggedIn","navigateByUrl","routes","path","loadChildren","then","m","dashboardRoutes","canActivate","authGuard","redirectTo","pathMatch","loadComponent","LoginComponent","ANIMATION_PREFIX","AsyncAnimationRendererFactory","inject","ChangeDetectionScheduler","ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN","doc","delegate","zone","animationType","moduleImpl","loadFn","m","moduleImplPromise","e","RuntimeError","ɵcreateEngine","ɵAnimationRendererFactory","rendererFactory","hostElement","rendererType","renderer","dynamicRenderer","DynamicDelegationRenderer","animationRendererFactory","animationRenderer","__ngFactoryType__","ɵɵinvalidFactory","ɵɵdefineInjectable","impl","fn","name","namespace","value","parent","newChild","refChild","isMove","oldChild","isHostElement","selectorOrNode","preserveContent","node","el","style","flags","target","eventName","callback","propOrEventName","InjectionToken","provideAnimationsAsync","type","performanceMarkFeature","makeEnvironmentProviders","RendererFactory2","DOCUMENT","DomRendererFactory2","NgZone","ANIMATION_MODULE_TYPE","appConfig","providers","provideZoneChangeDetection","eventCoalescing","provideRouter","routes","provideClientHydration","withEventReplay","provideAnimationsAsync","AppComponent","initApp","constructor","ngOnInit","setTimeout","selectors","features","ɵɵProvidersFeature","decls","vars","template","rf","ctx","ɵɵtemplate","AppComponent_Conditional_0_Template","ɵɵelement","ɵɵconditional","CommonModule","RouterOutlet","encapsulation","bootstrapApplication","AppComponent","appConfig","catch","err","console","error"],"x_google_ignoreList":[2]}